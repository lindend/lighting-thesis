#include "SHMath.incl"

struct PS_OUT
{
	float4 SHr : SV_Target0;
	float4 SHg : SV_Target1;
	float4 SHb : SV_Target2;
};

float3 parseColor(float v)
{
	uint color = asuint(v);
	return float3(	(color & 0xFF) / 255.f,
					((color >> 8) & 0xFF) / 255.f,
					((color >> 16) & 0xFF) / 255.f);
}

PS_OUT main(nointerpolation float4 direction : DIRECTION)
{
	PS_OUT output; 

	float4 sh = CreateLobe(direction.xyz);
	float3 color = parseColor(direction.w);
	output.SHr = sh * color.r;
	output.SHg = sh * color.g;
	output.SHb = sh * color.b;

	return output;
}