#include "globals.incl"
#include "SHMath.incl"

float3 DepthToPos(float depth, float2 uv)
{
	float4 worldPos = mul(float4(float2(uv.x, 1.f - uv.y) * 2.f - 1.f, depth, 1.0f), InvProj);
	return worldPos.xyz / worldPos.w;
}

float4 main(float3 color : COLOR0, float3 direction : DIRECTION)
{
	float4 color = ColorSpec.Sample(Point, uv);
	float4 normRough = NormalRough.Sample(Point, uv);
	float3 normal = normRough.xyz;
	float depth = Depth.Sample(Point, uv).x;
	float3 pos = DepthToPos(depth, uv);

	float3 cell = cellFromPos(pos);

	float4 redSH = LightVolumeRed.Sample(Bilinear, cell);
	float4 greenSH = LightVolumeGreen.Sample(Bilinear, cell);
	float4 blueSH = LightVolumeBlue.Sample(Bilinear, cell);

	return = float4(EvalSH(redSH, normal), EvalSH(greenSH, normal), EvalSH(blueSH, normal), 1.0f);
}

float3 cellFromPos(float3 worldPosition)
{
	float x = worldPosition / cellSize;
	float y = worldPosition / cellSize;
	float z = worldPosition / cellSize * 32;

	return float3(x,y,z);
}